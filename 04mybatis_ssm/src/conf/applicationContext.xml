<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context"
       xmlns:tx="http://www.springframework.org/schema/tx"
       xmlns:mybatis-spring="http://mybatis.org/schema/mybatis-spring"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context.xsd http://www.springframework.org/schema/tx  http://www.springframework.org/schema/tx/spring-tx.xsd http://mybatis.org/schema/mybatis-spring http://mybatis.org/schema/mybatis-spring.xsd">
<!--springMVC只是用来控制跳转的逻辑-->
<!--spring希望管理所有的业务逻辑组件等。。-->
<context:component-scan base-package="com.lzy.mybatis">
<!--    除了控制器其他都要-->
    <context:exclude-filter type="annotation" expression="org.springframework.stereotype.Controller"/>
</context:component-scan>
<!--spring用来控制业务逻辑，数据源，事务控制，aop-->
<!--    配置c3p0数据源-->
<!--    引入数据库配置文件-->
    <bean id="dataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource">
        <property name="jdbcUrl" value="com.mysql.jdbc.Driver"></property>
        <property name="driverClass" value="jdbc:mysql://localhost:3306/mybatislearn"></property>
        <property name="user" value="root"></property>
        <property name="password" value="lzy1234"></property>
    </bean>
<!--    spring事务管理器-->
    <bean id="dataSourceTransactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
        <property name="dataSource" ref="dataSource"></property>
    </bean>
<!--  开启基于注解的事务  -->
    <tx:annotation-driven transaction-manager="dataSourceTransactionManager"></tx:annotation-driven>
<!--    整合mybatis
1.spring管理所有组件，mapper的实现类
2.spring用来管理事务，声明式事务-->
<!--    自动创建出SqlSessionFactory对象，减少工作量-->
<bean id="sqlSessionFactoryBean" class="org.mybatis.spring.SqlSessionFactoryBean">
    <property name="dataSource" ref="dataSource"></property>
<!--    指定全局配置文件的位置-->
    <property name="configLocation" value="classpath:conf/mybatis-conf.xml"></property>
<!--    指定mapper文件的位置-->
    <property name="mapperLocations" value="classpath:conf/mybatis/mapper/*.xml"></property>
</bean>
<!--扫描所有的mapper接口的实现，让这些mapper能够自动注入
    base-package:指定mapper接口的包名-->
<mybatis-spring:scan base-package="classpath:com.lzy.mybatis.dao"></mybatis-spring:scan>

</beans>